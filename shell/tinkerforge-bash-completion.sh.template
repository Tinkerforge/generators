_tinkerforge_device()
{
	local prev

	for (( i=$1; i > 0; i-- )); do
		prev="${COMP_WORDS[i-1]}"

		case "${prev}" in
		get-*|is-*|are-*<<GETTER>><<CALLBACK>>)
			COMPREPLY=($(compgen -W "--help --execute" -- ${cur}))
			break
			;;
		set-*<<SETTER>>)
			COMPREPLY=($(compgen -W "--help --expect-response" -- ${cur}))
			break
			;;
		call)
			local functions=$(tinkerforge call $2 --list-functions)
			COMPREPLY=($(compgen -W "--help --list-functions ${functions}" -- ${cur}))
			break
			;;
		dispatch)
			local callbacks=$(tinkerforge dispatch $2 --list-callbacks)
			COMPREPLY=($(compgen -W "--help --list-callbacks ${callbacks}" -- ${cur}))
			break
			;;
		*)
			;;
		esac
	done
}

_tinkerforge()
{
	COMPREPLY=()
	local prev cur
	prev="${COMP_WORDS[COMP_CWORD-1]}"
	cur="${COMP_WORDS[COMP_CWORD]}"

	case "${prev}" in
	--help)
		return 0
		;;
	--version)
		return 0
		;;
	--host)
		_known_hosts
		return 0
		;;
	--port)
		return 0
		;;
	--secret)
		return 0
		;;
	--item-separator)
		return 0
		;;
	--group-separator)
		return 0
		;;
	--no-symbolic-input)
		return 0
		;;
	--no-symbolic-output)
		return 0
		;;
	--duration)
		return 0
		;;
	--timeout)
		return 0
		;;
	--list-devices)
		return 0
		;;
	--list-functions)
		return 0
		;;
	--list-callbacks)
		return 0
		;;
	<<DEVICES>>)
		local host port secret options
		host=""
		port=""
		secret=""
		options=""

		for (( i=${COMP_CWORD}; i > 0; i-- )); do
			case "${COMP_WORDS[i]}" in
			--host)
				case "${COMP_WORDS[i+1]}" in
				=)
					host="--host ${COMP_WORDS[i+2]}"
					;;
				*)
					host="--host ${COMP_WORDS[i+1]}"
					;;
				esac
				;;
			--port)
				case "${COMP_WORDS[i+1]}" in
				=)
					port="--port ${COMP_WORDS[i+2]}"
					;;
				*)
					port="--port ${COMP_WORDS[i+1]}"
					;;
				esac
				;;
			--secret)
				case "${COMP_WORDS[i+1]}" in
				=)
					secret="--secret ${COMP_WORDS[i+2]}"
					;;
				*)
					secret="--secret ${COMP_WORDS[i+1]}"
					;;
				esac
				;;
			call)
				options="--list-functions"
				;;
			dispatch)
				options="--list-callbacks"
				;;
			*)
				;;
			esac
		done

		local uids=$(tinkerforge ${host} ${port} ${secret} enumerate --duration 100 --execute "if [ {device-identifier} = '${COMP_WORDS[COMP_CWORD-1]}' ]; then echo {uid}; fi" 2> /dev/null)
		COMPREPLY=($(compgen -W "--help ${options} ${uids}" -- ${cur}))
		return 0
		;;
	--execute)
		return 0
		;;
	--expect-response)
		return 0
		;;
	*)
		;;
	esac

	for (( i=${COMP_CWORD}; i > 0; i-- )); do
		prev="${COMP_WORDS[i-1]}"

		case "${prev}" in
		tinkerforge)
			COMPREPLY=($(compgen -W "--help --host --port --secret --item-separator --group-separator --no-symbolic-input --no-symbolic-output call dispatch enumerate listen" -- ${cur}))
			break
			;;
		call)
			local devices=$(tinkerforge call --list-devices)
			COMPREPLY=($(compgen -W "--help --list-devices --timeout ${devices}" -- ${cur}))
			break
			;;
		dispatch)
			local devices=$(tinkerforge dispatch --list-devices)
			COMPREPLY=($(compgen -W "--help --list-devices --duration ${devices}" -- ${cur}))
			break
			;;
		enumerate)
			COMPREPLY=($(compgen -W "--help --duration --types --execute" -- ${cur}))
			break
			;;
		listen)
			COMPREPLY=($(compgen -W "--help --address --port --enable-host --enable-port --enable-execute" -- ${cur}))
			break
			;;
		<<DEVICES>>)
			_tinkerforge_device ${COMP_CWORD} ${prev}
			break
			;;
		*)
			;;
		esac
	done

	return 0
}

complete -F _tinkerforge tinkerforge
